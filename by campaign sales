create table emailed_opens as 
select
res.wk_idnt                                                                as wk_idnt,
(substr(camp.campaign_name, 1, INSTR(camp.campaign_name, ' (2018', -1)))   as campaign_name,
rf.indiv_id                                                                as indiv_id,
max(tm.day_idnt)                                                         as last_open
from ua_email_resolution res
inner join ua_campaign camp on camp.campaign_id = res.campaign_id
inner join ua_email_ref rf on res.email_id = rf.email_id and rf.pref_indiv_em_flg = 'Y' and rf.valid_email_mktg_flg = 'Y' and rf.ca_valid_email_flg = 'N' and rf.VALID_ADDR_PREF_INDIV_EM_FLG ='Y'
inner join ua_pos_tm_day tm on to_date(res.opened_dt) = tm.day_dt
where res.wk_idnt between 201701 and 201807
and res.opened_dt is not null
group by res.wk_idnt, campaign_name, rf.indiv_id;

select wk_idnt,
count(distinct indiv_id)
from emailed_opens
group by wk_idnt
order by wk_idnt asc;

create table email_campaign_sales as
SELECT 
eo.wk_idnt,
eo.campaign_name,
count(distinct eo.indiv_id)                                                                                                             as customers_opened,
count(distinct coalesce(stre.indiv_id, ecom.indiv_id))                                                                                  as customers_shopped,
sum((coalesce(stre.store_trans,0))+ (coalesce(ecom.ecom_trans, 0)))                                                                     as trans,
sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))                                                                     as sales,
(round(sum(stre.store_gm)/sum(stre.store_sales), 4)) *   sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))            as gm,
sum(stre.store_sales)                                                                                                                   as store_sales,
sum(stre.store_gm)                                                                                                                      as store_gm
from emailed_opens  eo
full outer join (select
          tm.wk_idnt,
          dtl.indiv_id,
          count(distinct dtl.pos_trans_key)                   as store_trans,
          sum(dtl.extended_sls_amt)                           as store_sales,
          sum(dtl.grs_mrgn_amt)                               as store_gm,
          sum(dtl.qty)                                        as store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         inner join ua_pos_tm_day tm on dtl.day_idnt = tm.day_idnt
         inner join emailed_opens  eo  on eo.indiv_id = dtl.indiv_id and eo.last_open = tm.day_idnt
         where dtl.wk_idnt between 201701 and 201807 and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
        group by dtl.indiv_id, tm.wk_idnt) stre on stre.indiv_id = eo.indiv_id and stre.wk_idnt = eo.wk_idnt
    full outer join(
    select
        tm.wk_idnt,
        ecom.indiv_id,
        count(distinct ecom.order_id)                       as ecom_trans,
        sum(ecom.flfll_net_ttl_amt)                         as ecom_sales,
        sum(ecom.flfll_unit_cnt)                            as ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        inner join emailed_opens  eo  on ecom.indiv_id=eo.indiv_id and eo.last_open = tm.day_idnt
        where tm.wk_idnt between 201701 and 201807
        group by ecom.indiv_id, tm.wk_idnt) ecom on stre.indiv_id = ecom.indiv_id and ecom.wk_idnt = stre.wk_idnt
where (eo.campaign_name not like '%TRG%'and eo.campaign_name not like '%CAN%'and eo.campaign_name not like '%QUE%')
group by eo.campaign_name, eo.wk_idnt
order by eo.wk_idnt, eo.campaign_name;
