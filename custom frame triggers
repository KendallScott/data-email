drop table cf_triggers;
create table cf_triggers as
select
rf.indiv_id,
rf.ca_valid_email_flg ,
min(res.opened_dt)                                                                                                                                                                                                                                                                                                       as first_open,
coalesce((substr(camp.campaign_name, 1, INSTR(camp.campaign_name, ' (2017', -1))) , (substr(camp.campaign_name, 1, INSTR(camp.campaign_name, ' (2018', -1))) )as campaign_name,
case when camp.campaign_name like '%TRG_CUSTF_CF_Estimate_Automated_2016_US%' then 'CF_estimate_US'
when camp.campaign_name like '%TRG_CUSTF_CF_Estimate_Automated_2016_CAN%' then 'CF_estimate_CAN'
when camp.campaign_name like '%TRG_CUSTF_7DaysLeft_CF_Retention_US%' then 'CF_retention_US' 
when camp.campaign_name like '%TRG_CUSTF_NEW_CF_Retention_28_days_US%' then 'CF_retention_US_28days'
when camp.campaign_name like '%TRG_CUSTF_NEW_CF_Retention_28_days_CAN%' then 'CF_retention_CAN_28days'
when camp.campaign_name like '%TRG_CUSTF_NEW_CF_Retention_CAN_1_YEAR%' then 'CF_retention_CAN_oneyear'
when camp.campaign_name like '%TRG_CUSTF_20170828_NEW_CF_Retention_US_1_YEAR%' then 'CF_retention_US_oneyear'
end as campaign_type,
res.campaign_id,
max(res.wk_idnt) as wk_idnt
from ua_campaign camp
inner join ua_email_resolution res on res.campaign_id = camp.campaign_id
inner join ua_email_ref rf on res.email_id = rf.email_id and rf.pref_indiv_em_flg = 'Y' and rf.valid_email_mktg_flg = 'Y'  and rf.VALID_ADDR_PREF_INDIV_EM_FLG ='Y'
where camp.campaign_name like '%TRG%'
and (camp.campaign_name like '%CF%'
or upper(camp.campaign_name) like '%CUSTOM%FRAME %')
and camp.campaign_name not like '%TEST%'
and res.wk_idnt between 201801 and 201809
and camp.campaign_name  not like '%OrderReady%'
group by camp.campaign_name, res.campaign_id, rf.indiv_id, rf.ca_valid_email_flg ;

select * from cf_triggers where rownum <55

create table emailed_opens as 
select
res.wk_idnt                                                                as wk_idnt,
(substr(camp.campaign_name, 1, INSTR(camp.campaign_name, ' (2018', -1)))   as campaign_name,
rf.indiv_id                                                                as indiv_id,
min(tm.day_idnt)                                                         as first_open
from ua_email_resolution res
inner join ua_campaign camp on camp.campaign_id = res.campaign_id
inner join ua_email_ref rf on res.email_id = rf.email_id and rf.pref_indiv_em_flg = 'Y' and rf.valid_email_mktg_flg = 'Y' and rf.ca_valid_email_flg = 'N' and rf.VALID_ADDR_PREF_INDIV_EM_FLG ='Y'
inner join ua_pos_tm_day tm on to_date(res.opened_dt) = tm.day_dt
where res.wk_idnt between 201701 and 201807
and res.opened_dt is not null
group by res.wk_idnt, campaign_name, rf.indiv_id;

select wk_idnt,
count(distinct indiv_id)
from emailed_opens
group by wk_idnt
order by wk_idnt asc;

create table custom_frame_sales as
select
dtl.day_idnt,
dtl.indiv_id,
 count(distinct dtl.pos_trans_key)                   as store_trans,
 sum(dtl.extended_sls_amt)                              as store_sales,
 sum(dtl.grs_mrgn_amt)                                       as store_gm,
 sum(dtl.qty)                                                             as store_units
 from         ua_pos_trans_dtl dtl
 inner join ua_store str on dtl.loc_key = str.loc_key
 inner join ua_pos_tm_day tm on dtl.day_idnt = tm.day_idnt
 inner join ua_pos_prod_sku sku on dtl.sku_key = sku.sku_key
 where dtl.wk_idnt between 201801 and 201809 and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
 and dtl.indiv_id in (select distinct  indiv_id from cf_triggers)
  and sku.grp_desc like '%CUSTOM FRAMING%'
 group by dtl.day_idnt,  dtl.indiv_id
 
 select * from custom_frame_sales where rownum <55
 
 select 
 count(distinct indiv_id) as customers, 
 sum(store_trans) as transactions, 
 sum(store_sales) as sales
 from custom_frame_sales
 
 
group by eo.campaign_name,cf.wk_idnt
order by eo.wk_idnt, eo.campaign_name;
